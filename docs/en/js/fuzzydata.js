$(document).ready(function () {indexDict['en'] = [{ "title" : "Lyve Cloud Account API version 2 ", 
"url" : "lyve-cloud-account-api-version-2.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 ", 
"snippet" : "...", 
"body" : "" }, 
{ "title" : "Overview ", 
"url" : "lyve-cloud-account-api-version-2.html#overview", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Overview ", 
"snippet" : "The Lyve Cloud Account API provides programmatic access to Lyve Cloud to perform administrative tasks. You can use the APIs to manage permissions, service accounts, and usage. These APIs are accessed after successful authentication by calling an endpoint that uses secret credentials. Every active Ly...", 
"body" : "The Lyve Cloud Account API provides programmatic access to Lyve Cloud to perform administrative tasks. You can use the APIs to manage permissions, service accounts, and usage. These APIs are accessed after successful authentication by calling an endpoint that uses secret credentials. Every active Lyve Cloud account administrator can generate one set of account API credentials. The Account API expects each admin user to generate unique credentials using the Lyve Cloud console to authenticate. For more information on generating the API credentials, see Using Account API . " }, 
{ "title" : "Protocol basics ", 
"url" : "lyve-cloud-account-api-version-2.html#protocol-basics", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Protocol basics ", 
"snippet" : "...", 
"body" : "" }, 
{ "title" : "Data structure ", 
"url" : "lyve-cloud-account-api-version-2.html#data-structure", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Protocol basics \/ Data structure ", 
"snippet" : "The API uses JSON structures, which may include the following data types: Boolean – True or false Number – Numeric value, For example, 1234 String – Characters enclosed in quotes, For example, \"Lyve Cloud\"...", 
"body" : "The API uses JSON structures, which may include the following data types: Boolean – True or false Number – Numeric value, For example, 1234 String – Characters enclosed in quotes, For example, \"Lyve Cloud\" " }, 
{ "title" : "API endpoint ", 
"url" : "lyve-cloud-account-api-version-2.html#api-endpoint", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Protocol basics \/ Data structure \/ API endpoint ", 
"snippet" : "An endpoint is the URL of the entry point for a Lyve Cloud web service. https:\/\/api.lyvecloud.seagate.com\/v2...", 
"body" : "An endpoint is the URL of the entry point for a Lyve Cloud web service. https:\/\/api.lyvecloud.seagate.com\/v2\n " }, 
{ "title" : "CRUD operations ", 
"url" : "lyve-cloud-account-api-version-2.html#crud-operations", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Protocol basics \/ CRUD operations ", 
"snippet" : "The following methods can be used to Create, Read, Update and Delete Lyve Cloud entities: Operation Syntax Body Structure Response Structure Create an entity POST \/uri Required The created entity Read an entity GET \/uri\/<id> - The requested entity Read all entities GET \/uri - List of entities Update...", 
"body" : "The following methods can be used to Create, Read, Update and Delete Lyve Cloud entities: Operation Syntax Body Structure Response Structure Create an entity POST \/uri Required The created entity Read an entity GET \/uri\/<id> - The requested entity Read all entities GET \/uri - List of entities Update an entity PUT \/uri\/<id> Required The updated entity Delete an entity DELETE \/uri\/<id> - The deleted entity " }, 
{ "title" : "Response to request ", 
"url" : "lyve-cloud-account-api-version-2.html#response-to-request", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ Protocol basics \/ Response to request ", 
"snippet" : "Successful request The successful status message is 200 (OK); for some API request calls, a successful response contains the JSON format. The details of the JSON format are explained in the respective API request. Failed request When an error occurs, the header information contains the following: Co...", 
"body" : "Successful request The successful status message is 200 (OK); for some API request calls, a successful response contains the JSON format. The details of the JSON format are explained in the respective API request. Failed request When an error occurs, the header information contains the following: Content-Type: application\/JSON An appropriate 4xx or 5xx HTTP status code The following sample error response shows the structure of response elements common to all REST error responses. {\n  \"code\": \"string\",\n  \"message\": \"string\"\n} The following table explains the REST error response elements. Name Description Code A string that identifies the error. It is meant to be read and understood by programs that detect and handle errors by type. Message A description of the error condition. Programs may display the message directly to the end user if they meet an error condition. An error message in the body aids in resolving the issue. " }, 
{ "title" : "List of API error codes ", 
"url" : "lyve-cloud-account-api-version-2.html#list-of-api-error-codes", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Lyve Cloud Account API version 2 \/ List of API error codes ", 
"snippet" : "During an error, you will receive a JSON object in the response body containing the information about the error. Error responses also include an error message in the body to assist in resolving the problem. API error codes Code HTTP Status Code Message ExpiredToken Bad Request(400) Token expired. In...", 
"body" : "During an error, you will receive a JSON object in the response body containing the information about the error. Error responses also include an error message in the body to assist in resolving the problem. API error codes Code HTTP Status Code Message ExpiredToken Bad Request(400) Token expired. InvalidToken Bad Request(400) Token is not valid. InvalidTimeRange Bad Request (400) Invalid time range. InvalidArgument Bad Request (400) This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. InvalidBucketName Bad Request (400) A bucket that keeps audit logs must be set with Object Immutability. AuthenticationFailed Forbidden (403) Authentication failed. NoServiceAvailable Forbidden (403) The account has no services enabled for it. PermissionNotFound Not Found (404) A permission was not found. ServiceAccountNotFound Not Found (404) A service account was not found. ServiceAccountExpired Not Found (404) The service account has expired. Couldn’t enable the expired service. ServiceAccountExpired Not Found (404) The service account has expired. Couldn’t disable the expired service. BucketNotFound Not Found (404) A bucket was not found. PermissionNotReady Conflict (409) The permission is still being processed by some regions. ServiceAccountNotReady Conflict (409) The service account is still being processed by some regions. PermissionNameAlreadyExists Conflict (409) The permission name is already in use. Please use a different name. ServiceAccountNameAlreadyExists Conflict (409) The service account name is already in use. Please use a different name. ServiceNotReady Service Unavailable (503) The server is not ready to handle the request. Please retry the request later. InternalError Internal Server Error (500) The server encountered an internal error. Please retry the request. " }, 
{ "title" : "Authentication ", 
"url" : "authentication.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication ", 
"snippet" : "Lyve Cloud uses a token to authenticate access to the Lyve Cloud Account API. The Token is obtained by calling an endpoint that uses the Account ID, Access Key, and Secret Key. It returns a valid time-bound token, where the default expiration duration is 24 hours. When a token expires, the account A...", 
"body" : "Lyve Cloud uses a token to authenticate access to the Lyve Cloud Account API. The Token is obtained by calling an endpoint that uses the Account ID, Access Key, and Secret Key. It returns a valid time-bound token, where the default expiration duration is 24 hours. When a token expires, the account API returns HTTP 400 code, after which the client application needs to obtain a new token. Each request to an API endpoint must include the bearer header value. This value requires specifying a token in the authorization header of a request. A token is a unique string. Tokens eliminate the need for passing user credentials with requests. Such a token is issued by the \/auth\/token endpoint. package main\n\nimport (\n \"bytes\"\n \"net\/http\"\n)\n\nfunc main() {\n\n headers: = map[string][] string {\n \"Content-Type\": [] string {\n \"application\/json\"\n },\n \"Accept\": [] string {\n \"application\/json\"\n },\n }\n\n data: = bytes.NewBuffer([] byte {\n jsonReq\n })\n req,\n err: = http.NewRequest(\"POST\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/\", data)\n req.Header = headers\n\n client: = & http.Client {}\n resp,\n err: = client.Do(req)\n \/\/ ...\n} URL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"POST\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader(\n new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) {\n response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString()); const inputBody = '{\n\"accountId\": \"string\",\n\"accessKey\": \"string\",\n\"secret\": \"string\"\n}\n';\nconst headers = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json'\n};\n\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/', {\n method: 'POST',\n body: inputBody,\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n }); import requests\nheaders = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json'\n}\n\nr = requests.post('https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/', headers = headers)\n\nprint(r.json()) require 'rest-client'\nrequire 'json'\n\nheaders = {\n 'Content-Type' => 'application\/json',\n 'Accept' => 'application\/json'\n}\n\nresult = RestClient.post 'https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/',\n params: {}, headers: headers\n\np JSON.parse(result) " }, 
{ "title" : "Request ", 
"url" : "authentication.html#request-49101", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Request ", 
"snippet" : "A POST to \/auth\/token is used to exchange user credentials for an access token. POST \/auth\/token\/ Body parameter { \"accountId\": \"string\", \"accessKey\": \"string\", \"secret\": \"string\" }...", 
"body" : "A POST to \/auth\/token is used to exchange user credentials for an access token. POST \/auth\/token\/ Body parameter { \n \"accountId\": \"string\",\n \"accessKey\": \"string\",\n \"secret\": \"string\"\n} " }, 
{ "title" : "Parameters ", 
"url" : "authentication.html#parameters-49101", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description accountId body string True The Account ID is a unique identifier of the Lyve Cloud Account. The Account ID is created during the customer onboarding and is unique across all Lyve Cloud accounts. accessKey body string True The access key is generated when you generat...", 
"body" : "Name In Type Required Description accountId body string True The Account ID is a unique identifier of the Lyve Cloud Account. The Account ID is created during the customer onboarding and is unique across all Lyve Cloud accounts. accessKey body string True The access key is generated when you generate Account API credentials. For more information, see Using Account API . secret body string True The secret key is generated when you generate Account API credentials. For more information, see Using Account API . " }, 
{ "title" : "Responses ", 
"url" : "authentication.html#responses-49101", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Responses ", 
"snippet" : "Status Code Description Return JSON payload 200 OK The session token is returned successfully to use in subsequent API calls. The expiration time of the token is returned in response, ater the expiration duration the token is expired. { \"token\": \"string\", \"expirationSec\": 864000, } Field Description...", 
"body" : "Status Code Description Return JSON payload 200 OK The session token is returned successfully to use in subsequent API calls. The expiration time of the token is returned in response, ater the expiration duration the token is expired. { \n \"token\": \"string\",\n \"expirationSec\": 864000,\n} Field Description token The JWT session token to use in subsequent API calls. expirationSec The number of seconds remaining till the token expires. 400 Bad request The request is invalid and has invalid information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InvalidArgument This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. 403 Authentication failed. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message Authentication failed Authentication failed. 500 Internal Server Error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Testing a session token for validity ", 
"url" : "test-a-session-token-for-validity.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Testing a session token for validity ", 
"snippet" : "To access the API, you must request an access token when authenticating a user. The GET \/auth\/token is used to validate a session and return the remaining duration for that session. package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"appli...", 
"body" : "To access the API, you must request an access token when authenticating a user. The GET \/auth\/token is used to validate a session and return the remaining duration for that session. package main\n\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n} URL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString()); const headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n }); import requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/', headers = headers) print(r.json()) require 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/auth\/token\/', params: {}, headers: headers p JSON.parse(result) " }, 
{ "title" : "Request ", 
"url" : "test-a-session-token-for-validity.html#request-54398", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Testing a session token for validity \/ Request ", 
"snippet" : "The GET API allows validating a session. It returns the remaining duration of the token. GET \/auth\/token\/...", 
"body" : "The GET API allows validating a session. It returns the remaining duration of the token. GET \/auth\/token\/ " }, 
{ "title" : "Responses ", 
"url" : "test-a-session-token-for-validity.html#responses-54398", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Authentication \/ Testing a session token for validity \/ Responses ", 
"snippet" : "Status Code Description Return JSON payload 200 OK A session token is valid and is in effect. { \"expirationSec\": 0 } Field Description expirationSec Number of seconds remaining until the token expires. 400 Bad request Either the token is expired or not valid. { \"code\": \"string\", \"message\": \"string\" ...", 
"body" : "Status Code Description Return JSON payload 200 OK A session token is valid and is in effect. {\n \"expirationSec\": 0\n} Field Description expirationSec Number of seconds remaining until the token expires. 400 Bad request Either the token is expired or not valid. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Permissions ", 
"url" : "permissions.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions ", 
"snippet" : "Permissions control access to buckets and define which actions the service accounts can perform on a bucket. Bucket permission and Policy permission are two options available for granting permission to your buckets. Bucket permission : Bucket permission is used to set Read only , Write only , or All...", 
"body" : "Permissions control access to buckets and define which actions the service accounts can perform on a bucket. Bucket permission and Policy permission are two options available for granting permission to your buckets. Bucket permission : Bucket permission is used to set Read only , Write only , or All operations permission for selected buckets. Using Bucket permissions, you can grant access permissions to your bucket and the objects in the bucket. Only the admin and storage admin can associate permissions for the buckets. The permissions attached to the bucket apply to all of the objects in the bucket. For more information, see Managing bucket access permissions . Policy permission : Policy permissions are used to manage bucket-level permission by uploading a JSON file. You can also import a file compatible with the AWS IAM policy file. Using the Policy permission, you can allow or deny requests at a granular level based on the elements in the policy, resources, and aspects or conditions of the request. For more information, see Creating a policy permission . " }, 
{ "title" : "Creating new permissions ", 
"url" : "creating-new-permissions.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Creating new permissions ", 
"snippet" : "You can create bucket permissions without any buckets in the account only if you apply permission to all buckets in the account or all buckets with a prefix. Apply permission types using the type parameter. One or more existing buckets: Choose one or more from the bucket list. All buckets in this ac...", 
"body" : "You can create bucket permissions without any buckets in the account only if you apply permission to all buckets in the account or all buckets with a prefix. Apply permission types using the type parameter. One or more existing buckets: Choose one or more from the bucket list. All buckets in this account with a prefix : The bucket names must use the same few initial characters. For example, if four unique buckets for customer01 are created, such as customer01rawdata, customer01zipdata, customer01media and customer01, enter a prefix of the bucket names to assign and apply the permission. In this case, use the same beginning characters for each bucket for our prefix, customer01. All buckets in the account: Apply permission to all current and future buckets in the account. Policy : Upload or import a JSON file compatible with the AWS IAM policy file. Specify the details of the permission at a granular level. Apply actions using the action parameter. All Operations: This option allows to perform all operations on all buckets meeting the conditions applied using the type parameter. Read only: This option allows you to perform a read only operation on all buckets meeting the condition applied using the type parameter. Write only: This option allows you to write objects without reading them back on all buckets meetings the conditions applied using the type parameter. \npackage main\n\nimport (\"bytes\"\n \"net\/http\"\n)\n\nfunc main() {\n headers: = map[string][] string {\n \"Content-Type\": [] string {\n \"application\/json\"\n },\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"PUT\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"PUT\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst inputBody = '{ \"name\": \"string\", \"description\": \"string\", \"type\": \"all-buckets\", \"actions\": \"all-operations\", \"prefix\": \"string\", \"buckets\": [ \"string\" ], \"policy\": {}\n}\n';\nconst headers = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', {\n method: 'PUT',\n body: inputBody,\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.put('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Content-Type' => 'application\/json', 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.put 'https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', params: {}, headers: headers p JSON.parse(result)\n " }, 
{ "title" : "Using the Policy permission file ", 
"url" : "creating-new-permissions.html#using-the-policy-permission-file", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Creating new permissions \/ Using the Policy permission file ", 
"snippet" : "EXAMPLE OF POLICY PERMISSION FILE In this example, the policy permission has three statements: Statement 1: Allows object listing with a prefix in the bucket. It is done using a Condition element. Statement 2: Allows read and write operations for objects with the prefix in the bucket. Statement 3: D...", 
"body" : "EXAMPLE OF POLICY PERMISSION FILE In this example, the policy permission has three statements: Statement 1: Allows object listing with a prefix in the bucket. It is done using a Condition element. Statement 2: Allows read and write operations for objects with the prefix in the bucket. Statement 3: Denies delete object operation. {\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n {\n \"Sid\": \"statement1\",\n \"Action\": [\n \"s3:ListBucket\"\n ],\n \"Effect\": \"Allow\",\n \"Resource\": [\n \"arn:aws:s3:::mybucket\"\n ],\n \"Condition\": {\n \"StringLike\": {\n \"s3:prefix\": [\n \"David\/*\"\n ]\n }\n }\n },\n {\n \"Sid\": \"statement2\",\n \"Action\": [\n \"s3:GetObject\",\n \"s3:PutObject\"\n ],\n \"Effect\": \"Allow\",\n \"Resource\": [\n \"arn:aws:s3:::mybucket\/David\/*\"\n ]\n },\n {\n \"Sid\": \"statement3\",\n \"Action\": [\n \"s3:DeleteObject\"\n ],\n \"Effect\": \"Deny\",\n \"Resource\": [\n \"arn:aws:s3:::mybucket\/David\/*\",\n \"arn:aws:s3:::mycorporatebucket\/share\/marketing\/*\"\n ]\n }\n ]\n} The following example illustrates creating a policy permission file using Account API. {\n\"name\":\"permission_name\",\n\"description\":\"Test data\",\n\"type\":\"policy\",\n\"policy\":\"{\\\"Version\\\":\\\"2012-10-17\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"statement15feb1\\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Action\\\":[\\\"s3:*\\\"],\\\"Resource\\\":[\\\"arn:aws:s3:::*\/*\\\"]}]}\"\n} " }, 
{ "title" : "Request ", 
"url" : "creating-new-permissions.html#request-54401", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Creating new permissions \/ Request ", 
"snippet" : "The POST request creates controlled access to the buckets and defines actions the service account can perform on the specified buckets in the account. POST\/permissions\/ Body parameter { \"name\": \"string\", \"description\": \"string\", \"type\": \"all-buckets\", \"actions\": \"all-operations\", \"prefix\": \"string\",...", 
"body" : "The POST request creates controlled access to the buckets and defines actions the service account can perform on the specified buckets in the account. POST\/permissions\/ Body parameter {\n \"name\": \"string\", \n \"description\": \"string\", \n \"type\": \"all-buckets\", \n \"actions\": \"all-operations\", \n \"prefix\": \"string\", \n \"buckets\": [ \"string\" ], \n \"policy\": {}\n} " }, 
{ "title" : "Parameters ", 
"url" : "creating-new-permissions.html#parameters-54401", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Creating new permissions \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description name body string true Name of the permission. The name allows only alphanumeric, '-', '_' or spaces. Maximum length is 128 characters. description body string true Description of the permission. Maximum length is 1000 characters. type body string true The values for...", 
"body" : "Name In Type Required Description name body string true Name of the permission. The name allows only alphanumeric, '-', '_' or spaces. Maximum length is 128 characters. description body string true Description of the permission. Maximum length is 1000 characters. type body string true The values for the permission type can be: all-buckets : The permission is applied to all the existing and new buckets in the account. When you select the type as all-buckets , the parameters prefix, buckets, and policy are not part of the request. bucket-prefix : Specify a string of characters at the beginning of the bucket's name as a prefix to apply for permission. When you select the type as bucket-prefix , the parameters buckets and policy are not part of the request. bucket-names : The permission is applied to the specified bucket names. When you select the type as bucket-names , the parameters prefix and policy are not part of the request. policy : Permission is applied based on the policy permission file. For more information, see Using the Policy permission file. When you select the type as policy , the parameters action, prefix, and buckets are not part of the request. actions body string false The values for the actions can be: all-operations : Allows you to perform all operations. read-only : Allows you to perform a read only operation on one or more selected buckets and their objects. write-only : Allows you to write objects into the selected buckets without reading them back. These values are applied to the permission type. prefix body string false Prefix of your bucket names to assign and apply the permission based on the permission type bucket-prefix . buckets body [string] false Specify one or more bucket names based on permission type bucket-names . policy body object false The policy file is based on permission type policy . " }, 
{ "title" : "Responses ", 
"url" : "creating-new-permissions.html#responses-54401", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Creating new permissions \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 OK The request to create permission was successfully submitted. There might be a few seconds difference between the time the successful response is received and when the action is completed, as some regions may still process the create permission reque...", 
"body" : "Status Code Description Return JSON Payload 200 OK The request to create permission was successfully submitted. There might be a few seconds difference between the time the successful response is received and when the action is completed, as some regions may still process the create permission request. {\n \"id\": \"string\"\n} 400 Bad Request. The request is invalid and has invalid permission information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. InvalidArgument This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 409 The permission name already exists. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNameAlreadyExists The permission name is already in use. Please use a different name. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Listing permissions ", 
"url" : "listing-permissions.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Listing permissions ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/', params: {}, headers: headers p JSON.parse(result)\n All the permissions created for the account are listed. " }, 
{ "title" : "Request ", 
"url" : "listing-permissions.html#request-54402", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Listing permissions \/ Request ", 
"snippet" : "The GET \/permissions\/ allows listing all the permissions of the account. Optionally, you can specify the name to get the specific permission in the account. GET \/permissions\/...", 
"body" : "The GET \/permissions\/ allows listing all the permissions of the account. Optionally, you can specify the name to get the specific permission in the account. GET \/permissions\/ " }, 
{ "title" : "Parameters ", 
"url" : "listing-permissions.html#parameters-54402", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Listing permissions \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description name query string false This is an optional parameter. Query the name parameter for single permission....", 
"body" : "Name In Type Required Description name query string false This is an optional parameter. Query the name parameter for single permission. " }, 
{ "title" : "Responses ", 
"url" : "listing-permissions.html#responses-54402", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Listing permissions \/ Responses ", 
"snippet" : "Status Code Description Return JSON payload 200 OK Successfully returned permission list. [ { \"name\": \"string\", \"id\": \"string\", \"description\": \"string\", \"type\": \"all-buckets\", \"readyState\": true, \"createTime\": \"2019-08-24T14:15:22Z\" } ] Field Description name The permission name. id The permission i...", 
"body" : "Status Code Description Return JSON payload 200 OK Successfully returned permission list. [\n { \n \"name\": \"string\",\n \"id\": \"string\",\n \"description\": \"string\", \n \"type\": \"all-buckets\",\n \"readyState\": true,\n \"createTime\": \"2019-08-24T14:15:22Z\"\n }\n ] Field Description name The permission name. id The permission id. description Description of the permission. type The values for the permission type can be: all-buckets : The permission is applied to all the existing and new buckets in the account. When you select the type as all-buckets , the parameters prefix, buckets and policy are not part of the request. bucket-prefix : Specify a string of characters at the beginning of the name of the bucket as a prefix to apply for permission. When you select the type as bucket-prefix , the parameters buckets and policy are not part of the request. bucket-names : The permission is applied to the specified buckets names. When you select the type as bucket-names , the parameters prefix and policy are not part of the request. policy : Permission is applied based on the policy permission file. For more information, see Managing bucket access permissionsWhen you select the type as policy , the parameters actions, prefix, and buckets are not part of the request. readyState State of permissions.True if the permission is ready across all regions. createTime Time of the permission creation. 400 Bad request. Either the token is invalid or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 404 Not Found The permission is no longer available. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNotFound Permission was not found. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 500 The server encountered an internal error {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Getting permission by ID ", 
"url" : "getting-permission-by-id.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Getting permission by ID ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', params: {}, headers: headers p JSON.parse(result)\n Permission ID is a unique identifier for a permission. " }, 
{ "title" : "Request ", 
"url" : "getting-permission-by-id.html#request-54403", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Getting permission by ID \/ Request ", 
"snippet" : "Performing a GET operation on specific permission retrieves the permission. GET \/permissions\/{permissionId}...", 
"body" : "Performing a GET operation on specific permission retrieves the permission. GET \/permissions\/{permissionId} " }, 
{ "title" : "Parameters ", 
"url" : "getting-permission-by-id.html#parameters-54403", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Getting permission by ID \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description permissionId path string true Numeric ID of the permission....", 
"body" : "Name In Type Required Description permissionId path string true Numeric ID of the permission. " }, 
{ "title" : "Responses ", 
"url" : "getting-permission-by-id.html#responses-54403", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Getting permission by ID \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 OK Specified Permission ID is found, and the details are returned in the response. { \"id\": \"string\", \"name\": \"string\", \"description\": \"string\", \"type\": \"all-buckets\", \"readyState\": true, \"actions\": \"all-operations\", \"prefix\": \"string\", \"buckets\": [ \"st...", 
"body" : "Status Code Description Return JSON Payload 200 OK Specified Permission ID is found, and the details are returned in the response. { \n \"id\": \"string\",\n \"name\": \"string\",\n \"description\": \"string\",\n \"type\": \"all-buckets\",\n \"readyState\": true,\n \"actions\": \"all-operations\",\n \"prefix\": \"string\",\n \"buckets\": [ \"string\" ],\n \"policy\": {}\n} If the type is policy , then the fields actions, prefix, and buckets will not display. Field Description id ID of the permission. name Name of the permission. description Description of the permission. type The values for the permission type can be: all-operations : Allows to perform all the operations. When you select the type as all-operations , the parameters prefix, buckets and policy are not part of the request. bucket-prefix : Specify a string of characters at the beginning of the bucket's name as a prefix to apply for permission. When you select the type as bucket-prefix , the parameters buckets and policy are not part of the request. bucket-names : Permission is applied to the specified bucket names. When you select the type as bucket-names , the parameters prefix and policy are not part of the request. policy : Permission is applied based on the policy permission file. For more information, see Using the Policy permission file. When you select the type as policy , the parameters actions, prefix, and buckets are not part of the request. readyState State of the permissions. True if the permission is ready across all regions. actions The values for the actions can be: all-operations : Allows you to perform all operations. read-only : Allows you to perform a read only operation on one or more selected buckets and their objects. write-only : This allows you to write objects into the selected buckets without reading them back. prefix Specify a prefix of your bucket names to assign and apply the permission based on the permission type bucket-prefix . buckets Specify one or more bucket names based on permission type. policy The policy file based on permission type policy . 400 Either the token is not valid or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden. The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 Not Found The permission is not available. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNotFound The permission was not found. 500 An internal error has occurred. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Deleting permission by ID ", 
"url" : "deleting-permission-by-id.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Deleting permission by ID ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"text\/plain\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate....", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"text\/plain\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"DELETE\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', {\n method: 'DELETE',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.delete('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'text\/plain', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.delete 'https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', params: {}, headers: headers p JSON.parse(result)\n If the permission is associated with a service account, you cannot delete that permission. Also, once you delete permission, you cannot restore it. " }, 
{ "title" : "Request ", 
"url" : "deleting-permission-by-id.html#request-54404", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Deleting permission by ID \/ Request ", 
"snippet" : "Performing a Delete permission operation removes existing permissions from the database. DELETE \/permissions\/{permissionId}...", 
"body" : "Performing a Delete permission operation removes existing permissions from the database. DELETE \/permissions\/{permissionId} " }, 
{ "title" : "Parameters ", 
"url" : "deleting-permission-by-id.html#parameters-54404", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Deleting permission by ID \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description permissionId path string true Numeric ID of the permission to delete....", 
"body" : "Name In Type Required Description permissionId path string true Numeric ID of the permission to delete. " }, 
{ "title" : "Responses ", 
"url" : "deleting-permission-by-id.html#responses-54404", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Deleting permission by ID \/ Responses ", 
"snippet" : "Status Code Description Returned JSON payload 200 OK The delete operation is successful. Permission deleted successfully. 400 Bad request { \"code\": \"string\", \"message\": \"string\" } code code ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled...", 
"body" : "Status Code Description Returned JSON payload 200 OK The delete operation is successful. Permission deleted successfully. 400 Bad request {\n \"code\": \"string\",\n \"message\": \"string\"\n} code code ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 Not Found The permission to be deleted is not found. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNotFound Permission was not found. 409 Conflict The permission is not ready for deletion operation and is still being processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNotReady Permission is still being processed by some regions. 500 The server has encountered an internal error {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Updating a permission ", 
"url" : "updating-a-permission.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Updating a permission ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Content-Type\": [] string { \"application\/json\" }, \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = h...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Content-Type\": [] string {\n \"application\/json\"\n },\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"POST\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"POST\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst inputBody = '{ \"name\": \"string\", \"description\": \"string\", \"type\": \"all-buckets\", \"actions\": \"all-operations\", \"prefix\": \"string\", \"buckets\": [ \"string\" ], \"policy\": {}\n}\n';\nconst headers = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', {\n method: 'POST',\n body: inputBody,\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.post('https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Content-Type' => 'application\/json', 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.post 'https:\/\/api.lyvecloud.seagate.com\/v2\/permissions\/{PermissionId}', params: {}, headers: headers p JSON.parse(result)\n You can update all the permission parameters, bucket permission, and their associated actions. " }, 
{ "title" : "Request ", 
"url" : "updating-a-permission.html#request-54405", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Updating a permission \/ Request ", 
"snippet" : "Performing a PUT operation on specific a permission updates the permission. PUT \/permissions\/{permissionId} Body parameter { \"name\": \"string\", \"description\": \"string\", \"type\": \"bucket-names\", \"actions\": \"all-operations\", \"prefix\": \"string\", \"buckets\": [ \"string\" ], \"policy\": {} }...", 
"body" : "Performing a PUT operation on specific a permission updates the permission. PUT \/permissions\/{permissionId} Body parameter { \n \"name\": \"string\", \n \"description\": \"string\", \n \"type\": \"bucket-names\", \n \"actions\": \"all-operations\", \n \"prefix\": \"string\", \n \"buckets\": [ \"string\" ], \n \"policy\": {}\n} " }, 
{ "title" : "Parameters ", 
"url" : "updating-a-permission.html#parameters-54405", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Updating a permission \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description permissionId path string true Numeric ID of the permission to update. name body string true Name of the permission. description body string true Description of the permission. type body string true The values for the permission type can be: all-buckets : The permiss...", 
"body" : "Name In Type Required Description permissionId path string true Numeric ID of the permission to update. name body string true Name of the permission. description body string true Description of the permission. type body string true The values for the permission type can be: all-buckets : The permission is applied to all the existing buckets in the account and to new buckets. When you select the type as all-buckets , the parameters prefix, buckets and policy are not part of the request. bucket-prefix : Specify a string of characters at the beginning of the bucket's name as a prefix to apply for permission. When you select the type as bucket-prefix , the parameters buckets and policy are not part of the request. bucket-names : Permission is applied to the specified bucket names. When you select the type as bucket-names , the parameters prefix and policy are not part of the request. policy : Using the Policy permission, you can allow or deny requests at a granular level based on the elements in the policy, resources, and conditions of the request. When you select the type as policy , the parameters actions, prefix, and buckets are not part of the request. actions body string false The values for the actions can be: all-operations : Allows you to perform all the operations. read-only : Allows you to perform a read only operation on one or more selected buckets and their objects. write-only : Allows you to write objects into the selected buckets without reading them back. These values are applied to the permission type. For more information, see ???. prefix body string false Prefix of your bucket names to assign and apply the permission based on the permission type bucket-prefix . buckets body string false Specify one or more bucket names based on permission type bucket-names . policy body object false The policy file is based on permission type policy . For more information, see Managing bucket access permissions. " }, 
{ "title" : "Responses ", 
"url" : "updating-a-permission.html#responses-54405", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Permissions \/ Updating a permission \/ Responses ", 
"snippet" : "Status Description Return JSON Payload 200 OK The update operation is successful. Successfully updated the permission. 400 Bad Request It is an invalid request or invalid permission information. { \"code\": \"string\", \"message\": \"string\" } code message ExpiredToken Token expired. InvalidToken Token is ...", 
"body" : "Status Description Return JSON Payload 200 OK The update operation is successful. Successfully updated the permission. 400 Bad Request It is an invalid request or invalid permission information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. InvalidArgument This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 Not Found The permission to be updated is no longer available. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNotFound Permission was not found. 409 The permission name already exists The permission is not ready for update operation and is being processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message PermissionNameAlreadyExists The permission name is already in use. Please use a different name. PermissionNotReady Permission is still being processed by some regions. 500 Locked The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Service Accounts ", 
"url" : "service-accounts.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts ", 
"snippet" : "Service accounts allow applications to authenticate and access Lyve Cloud buckets and objects. When creating a service account, the access key and secret key are generated. This information must be saved at account creation, as you cannot recover key details afterwards. You must create buckets and a...", 
"body" : "Service accounts allow applications to authenticate and access Lyve Cloud buckets and objects. When creating a service account, the access key and secret key are generated. This information must be saved at account creation, as you cannot recover key details afterwards. You must create buckets and assign permission to buckets before creating a service account. For more information, see Managing buckets and Managing bucket access permissions. " }, 
{ "title" : "Creating a service account ", 
"url" : "creating-a-service-account.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Creating a service account ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Content-Type\": [] string { \"application\/json\" }, \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = h...", 
"body" : "package main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Content-Type\": [] string {\n \"application\/json\"\n },\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"PUT\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"PUT\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n const inputBody = '{ \"name\": \"string\", \"description\": \"string\", \"permissions\": [ \"string\" ]\n}\n';\nconst headers = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', {\n method: 'PUT',\n body: inputBody,\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.put('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Content-Type' => 'application\/json', 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.put 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', params: {}, headers: headers p JSON.parse(result)\n You must have at least one permission before creating a service account. " }, 
{ "title" : "Request ", 
"url" : "creating-a-service-account.html#request-54406", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Creating a service account \/ Request ", 
"snippet" : "The POST request creates a service account. The service account generates the credentials holding the access and secret keys. POST \/service-accounts\/ Body parameter { \"name\": \"string\", \"description\": \"string\", \"permissions\": [ \"string\" ] }...", 
"body" : "The POST request creates a service account. The service account generates the credentials holding the access and secret keys. POST \/service-accounts\/ Body parameter { \n \"name\": \"string\", \n \"description\": \"string\", \n \"permissions\": [ \"string\" ]\n} " }, 
{ "title" : "Parameters ", 
"url" : "creating-a-service-account.html#parameters-54406", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Creating a service account \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description name body string true Name of the new service account. The name allows only alphanumeric, '-', '_' or space. Maximum length is 128 characters. description body string false Description of the new service account. permissions body [string] true Permission ID to apply...", 
"body" : "Name In Type Required Description name body string true Name of the new service account. The name allows only alphanumeric, '-', '_' or space. Maximum length is 128 characters. description body string false Description of the new service account. permissions body [string] true Permission ID to apply to the service account. " }, 
{ "title" : "Responses ", 
"url" : "creating-a-service-account.html#responses-54406", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Creating a service account \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 OK The request to create a Service Account was successfully sent. There might be few seconds difference between the time the successful response is received, and when the action is completed, as some regions may still process the create service account...", 
"body" : "Status Code Description Return JSON Payload 200 OK The request to create a Service Account was successfully sent. There might be few seconds difference between the time the successful response is received, and when the action is completed, as some regions may still process the create service account request. If you need to start using the service account immediately, we suggest you wait for a few seconds and perform a retry operation until readyState=True . For more information, see Getting service account data by ID. { \n \"id\": \"string\", \n \"accessKey\": \"string\", \n \"secret\": \"string\"\n \"expirationDate\": \"2022-11-15\"\n} Field Description id ID of the service account. accessKey Access key generated after creating a service account. secret : Secret key generated after creating a service account. expirationDate Date when the service account will expire. 400 Bad Request, invalid service account information {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. InvalidArgument This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 409 The service account name already exists. The service account name must be unique. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNameAlreadyExists The service account name is already in use. Please use a different name. 500 Server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Listing service accounts ", 
"url" : "listing-service-accounts.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Listing service accounts ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/', params: {}, headers: headers p JSON.parse(result)\n All service accounts in the account are listed or a specific service account is listed. Each service account has a unique identifier. " }, 
{ "title" : "Request ", 
"url" : "listing-service-accounts.html#request-54407", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Listing service accounts \/ Request ", 
"snippet" : "The GET API lists all the service accounts or a specific service account. GET \/service-accounts\/...", 
"body" : "The GET API lists all the service accounts or a specific service account. GET \/service-accounts\/ " }, 
{ "title" : "Parameters ", 
"url" : "listing-service-accounts.html#parameters-54407", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Listing service accounts \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description name query string false This is an optional parameter. Use the parameter to query for a single service account by name....", 
"body" : "Name In Type Required Description name query string false This is an optional parameter. Use the parameter to query for a single service account by name. " }, 
{ "title" : "Responses ", 
"url" : "listing-service-accounts.html#responses-54407", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Listing service accounts \/ Responses ", 
"snippet" : "Status Code Description Schema 200 OK The operation is successful. [ { \"name\": \"string\", \"id\": \"string\", \"enabled\": true, \"readyState\": true, \"description\": \"string\" } ] Field Description name Name of the service account. id ID of a service account. enabled State of the Service Account. It can be en...", 
"body" : "Status Code Description Schema 200 OK The operation is successful. [ \n { \n \"name\": \"string\", \n \"id\": \"string\", \n \"enabled\": true, \n \"readyState\": true, \n \"description\": \"string\" \n }\n] Field Description name Name of the service account. id ID of a service account. enabled State of the Service Account. It can be enabled or disabled. readyState True if the service account is ready across all regions. description Description of the service account. 400 Bad request as the token is either invalid or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account was not found. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound Service account was not found. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Getting service account data by ID ", 
"url" : "getting-service-account-data-by-id.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Getting service account data by ID ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', params: {}, headers: headers p JSON.parse(result)\n You can retrieve a specific service account using the unique identifier. " }, 
{ "title" : "Request ", 
"url" : "getting-service-account-data-by-id.html#request-54408", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Getting service account data by ID \/ Request ", 
"snippet" : "The GET operation returns the service accounts as specified in the parameters. GET \/service-accounts\/{serviceAccountId}...", 
"body" : "The GET operation returns the service accounts as specified in the parameters. GET \/service-accounts\/{serviceAccountId} " }, 
{ "title" : "Parameters ", 
"url" : "getting-service-account-data-by-id.html#parameters-54408", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Getting service account data by ID \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account....", 
"body" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account. " }, 
{ "title" : "Responses ", 
"url" : "getting-service-account-data-by-id.html#responses-54408", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Getting service account data by ID \/ Responses ", 
"snippet" : "Status Code Description Schema 200 OK { \"id\": \"string\", \"name\": \"string\", \"description\": \"string\", \"enabled\": true, \"readyState\": true, \"permissions\": [ \"string\" ] } Field Description id ID of the service account. name Service account name. description Service account description. enabled Specifies ...", 
"body" : "Status Code Description Schema 200 OK { \n \"id\": \"string\", \n \"name\": \"string\", \n \"description\": \"string\", \n \"enabled\": true, \n \"readyState\": true, \n \"permissions\": [ \"string\" ]\n} Field Description id ID of the service account. name Service account name. description Service account description. enabled Specifies if the service account is enabled or disabled. readyState State of the service account. True if the service account is ready across all regions. permissions Permission name associated with the service account. 400 Bad request as the token is either invalid or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account was not found. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound Service account was not found. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Updating a service account ", 
"url" : "updating-a-service-account.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Updating a service account ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Content-Type\": [] string { \"application\/json\" }, \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = h...", 
"body" : "package main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Content-Type\": [] string {\n \"application\/json\"\n },\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"POST\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"POST\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst inputBody = '{ \"name\": \"string\", \"description\": \"string\", \"permissions\": [ \"string\" ]\n}\n';\nconst headers = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', {\n method: 'POST',\n body: inputBody,\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Content-Type': 'application\/json',\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.post('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Content-Type' => 'application\/json', 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.post 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', params: {}, headers: headers p JSON.parse(result)\n You can update the name and permissions associated with the service account. The secret credentials are not generated when you update. " }, 
{ "title" : "Request ", 
"url" : "updating-a-service-account.html#request-54409", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Updating a service account \/ Request ", 
"snippet" : "The PUT operation updates the existing service account. PUT \/service-accounts\/{serviceAccountId} Body parameter { \"name\": \"string\", \"description\": \"string\", \"permissions\": [ \"string\" ] }...", 
"body" : "The PUT operation updates the existing service account. PUT \/service-accounts\/{serviceAccountId} Body parameter { \n \"name\": \"string\", \n \"description\": \"string\", \n \"permissions\": [ \"string\" ]\n} " }, 
{ "title" : "Parameters ", 
"url" : "updating-a-service-account.html#parameters-54409", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Updating a service account \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account. name body string true Name of the service account. The name allows only alphanumeric, '-', '_' or space. Maximum length is 128 characters. description body string false Description of the service a...", 
"body" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account. name body string true Name of the service account. The name allows only alphanumeric, '-', '_' or space. Maximum length is 128 characters. description body string false Description of the service account. permissions body string true Permissions associated with the service account. " }, 
{ "title" : "Responses ", 
"url" : "updating-a-service-account.html#responses-54409", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Updating a service account \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 OK The update operation is successful. Successfully updated the service account. 400 It is an invalid request or invalid service account information. { \"code\": \"string\", \"message\": \"string\" } code message ExpiredToken Token expired. InvalidToken Token ...", 
"body" : "Status Code Description Return JSON Payload 200 OK The update operation is successful. Successfully updated the service account. 400 It is an invalid request or invalid service account information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. InvalidArgument This error might occur for the following reasons: One or more of the specified arguments was not valid. The request was missing an argument. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account to update was not found. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound A service account was not found. 409 The service account name already exists. The service account name must be unique. or The service account is not ready for update operation as it is locked and processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNameAlreadyExists The service account name is already in use. Please use a different name. ServiceAccountNotReady The service account is still being processed by some regions. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Enabling a service account ", 
"url" : "enabling-a-service-account.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Enabling a service account ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"text\/plain\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"PUT\", \"https:\/\/api.lyvecloud.seagate.com...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"text\/plain\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"PUT\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"PUT\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', {\n method: 'PUT',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n import requests\nheaders = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.put('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'text\/plain', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.put 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', params: {}, headers: headers p JSON.parse(result)\n You can enable a specific service account and use the secret credentials associated with the account. " }, 
{ "title" : "Request ", 
"url" : "enabling-a-service-account.html#request-54410", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Enabling a service account \/ Request ", 
"snippet" : "The PUT operation enables the existing service account. PUT \/service-accounts\/{serviceAccountId}\/enabled...", 
"body" : "The PUT operation enables the existing service account. PUT \/service-accounts\/{serviceAccountId}\/enabled " }, 
{ "title" : "Parameters ", 
"url" : "enabling-a-service-account.html#parameters-54410", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Enabling a service account \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account....", 
"body" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account. " }, 
{ "title" : "Responses ", 
"url" : "enabling-a-service-account.html#responses-54410", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Enabling a service account \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 Service Account enabled successfully. - 400 It is an invalid request or invalid service account information. { \"code\": \"string\", \"message\": \"string\" } code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account h...", 
"body" : "Status Code Description Return JSON Payload 200 Service Account enabled successfully. - 400 It is an invalid request or invalid service account information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account to enable was not found or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound Service account was not found. ServiceAccountExpired Service account is expired. Could not enable the expired service. 409 The service account is not ready to be enabled and is still being processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotReady The service account is still being processed by some regions. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Disabling a service account ", 
"url" : "disabling-a-service-account.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Disabling a service account ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"text\/plain\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate....", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"text\/plain\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"DELETE\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', {\n method: 'DELETE',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n import requests\nheaders = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.delete('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'text\/plain', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.delete 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\/enabled', params: {}, headers: headers p JSON.parse(result)\n Disabling a service account prevents you from using the secret key to authenticate. " }, 
{ "title" : "Request ", 
"url" : "disabling-a-service-account.html#request-54411", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Disabling a service account \/ Request ", 
"snippet" : "Performing a Disable operation removes the service account from the user's account. DELETE \/service-accounts\/{serviceAccountId}\/enabled...", 
"body" : "Performing a Disable operation removes the service account from the user's account. DELETE \/service-accounts\/{serviceAccountId}\/enabled " }, 
{ "title" : "Parameters ", 
"url" : "disabling-a-service-account.html#parameters-54411", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Disabling a service account \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account to disable....", 
"body" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account to disable. " }, 
{ "title" : "Responses ", 
"url" : "disabling-a-service-account.html#responses-54411", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Disabling a service account \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 OK Service Account disabled successfully. - 400 It is an invalid request or invalid service account information. { \"code\": \"string\", \"message\": \"string\" } code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The accou...", 
"body" : "Status Code Description Return JSON Payload 200 OK Service Account disabled successfully. - 400 It is an invalid request or invalid service account information. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account to disable was not found or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound A service account was not found. ServiceAccountExpired Service account is expired. Could not disable the expired service. 409 The service account is not ready to be disabled and is still being processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotReady The service account is still being processed by some regions. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Deleting service account by ID ", 
"url" : "deleting-service-account-by-id.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Deleting service account by ID ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"text\/plain\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate....", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"text\/plain\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"DELETE\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"DELETE\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', {\n method: 'DELETE',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n import requests\nheaders = {\n 'Accept': 'text\/plain',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.delete('https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', headers = headers) print(r.json())\n require 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'text\/plain', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.delete 'https:\/\/api.lyvecloud.seagate.com\/v2\/service-accounts\/{ServiceAccountId}', params: {}, headers: headers p JSON.parse(result)\n Deleting a service account permanently prevents you from using the secret and access key to authenticate. " }, 
{ "title" : "Request ", 
"url" : "deleting-service-account-by-id.html#request-65009", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Deleting service account by ID \/ Request ", 
"snippet" : "The Delete operation removes the existing service account from the database. DELETE \/service-accounts\/{serviceAccountId}...", 
"body" : "The Delete operation removes the existing service account from the database. DELETE \/service-accounts\/{serviceAccountId} " }, 
{ "title" : "Parameters ", 
"url" : "deleting-service-account-by-id.html#parameters-65009", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Deleting service account by ID \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account to delete....", 
"body" : "Name In Type Required Description serviceAccountId path string true Numeric ID of the service account to delete. " }, 
{ "title" : "Responses ", 
"url" : "deleting-service-account-by-id.html#responses-65009", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Service Accounts \/ Deleting service account by ID \/ Responses ", 
"snippet" : "Status Code Description Return JSON Payload 200 The delete operation is successful. Service account deleted successfully. 400 Bad request as either the token is invalid or expired. { \"code\": \"string\", \"message\": \"string\" } code message ExpiredToken Token expired. InvalidToken Token is not valid. 403...", 
"body" : "Status Code Description Return JSON Payload 200 The delete operation is successful. Service account deleted successfully. 400 Bad request as either the token is invalid or expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 404 The service account to be deleted was not found. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotFound A service account was not found. 409 The service account is not ready to be deleted and is still being processed by some regions. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceAccountNotReady The service account is still being processed by some regions. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Usage ", 
"url" : "usage.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage ", 
"snippet" : "This API is used to get historical storage usage of the account for the current month or specified time range....", 
"body" : "This API is used to get historical storage usage of the account for the current month or specified time range. " }, 
{ "title" : "Getting historical storage usage by month ", 
"url" : "get-historical-storage-usage-by-month.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting historical storage usage by month ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/monthly\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/monthly\/?from%2Dmonth=11&from%2Dyear=2020&to%2Dmonth=11&to%2Dyear=2020\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/monthly\/?from%2Dmonth=11&from%2Dyear=2020&to%2Dmonth=11&to%2Dyear=2020', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/monthly\/', params = {\n 'from-month': '11',\n 'from-year': '2020',\n 'to-month': '11',\n 'to-year': '2020'\n}, headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/monthly\/', params: {\n 'from-month' => '[monthNumber](#schemamonthnumber)',\n 'from-year' => '[yearNumber](#schemayearnumber)',\n 'to-month' => '[monthNumber](#schemamonthnumber)',\n 'to-year' => '[yearNumber](#schemayearnumber)'\n}, headers: headers p JSON.parse(result)\n The monthly average usage is calculated by averaging the daily average usage of all the days in that month. The monthly average usage is used to calculate the monthly cost at the end of the month. Based on the time range, it returns zero (0) if the data is unavailable. The data is displayed for a maximum interval of six months. " }, 
{ "title" : "Request ", 
"url" : "get-historical-storage-usage-by-month.html#request-54399", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting historical storage usage by month \/ Request ", 
"snippet" : "The GET operation provides the account's monthly usage for a specified duration. GET \/usage\/monthly\/...", 
"body" : "The GET operation provides the account's monthly usage for a specified duration. GET \/usage\/monthly\/ " }, 
{ "title" : "Parameters ", 
"url" : "get-historical-storage-usage-by-month.html#parameters-54399", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting historical storage usage by month \/ Request \/ Parameters ", 
"snippet" : "Name In Type Required Description fromMonth query Integer true Specifies the start month, inclusive, from which to retrieve usage data. Where, zero corresponds to January and 11 corresponds to December. fromYear query Integer true Specifies the start year, inclusive, from which to retrieve usage dat...", 
"body" : "Name In Type Required Description fromMonth query Integer true Specifies the start month, inclusive, from which to retrieve usage data. Where, zero corresponds to January and 11 corresponds to December. fromYear query Integer true Specifies the start year, inclusive, from which to retrieve usage data. toMonth query Integer true Specifies the end month, inclusive, from which to retrieve usage data. Where, zero corresponds to January and 11 corresponds to December. toYear query Integer true Specifies the end year, inclusive, from which to retrieve usage data. " }, 
{ "title" : "Responses ", 
"url" : "get-historical-storage-usage-by-month.html#responses-54399", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting historical storage usage by month \/ Responses ", 
"snippet" : "Status Code Description Returned JSON Payload 200 OK Successfully returns the data usage. Each item in return corresponds to one month. If the account is a master account, the response includes usageByBucket returning data usage for every bucket in the master account, and it also includes usageBySub...", 
"body" : "Status Code Description Returned JSON Payload 200 OK Successfully returns the data usage. Each item in return corresponds to one month. If the account is a master account, the response includes usageByBucket returning data usage for every bucket in the master account, and it also includes usageBySubAccount , returning data usage for its available sub-accounts. If the account is a sub-account, the response includes usageByBucket , returning data usage for every bucket in the sub-account. However, usageBySubAccount ,  is not returned, as there are no sub-accounts associated to another sub account. {\n \"usageByBucket\": [\n {\n \"year\": 0,\n \"month\": 0,\n \"totalUsageGB\": 0,\n \"buckets\": [\n {\n \"name\": \"string\",\n \"usageGB\": 0\n }\n ]\n }\n ],\n \"usageBySubAccount\": [\n {\n \"year\": 0,\n \"month\": 0,\n \"totalUsageGB\": 0,\n \"subAccounts\": [\n { \n \"subAccountName\": \"subname1\",\n \"subAccountId\": \"string\",\n \"usageGB\": 0,\n \"createTime\": \"2022-10-16T14:02:20.319Z\"\n }\n ]\n }\n ]\n}\n Field Description year Usage of the account for selected year. month Usage of the account for selected month. name Name of the bucket. usageGB Bucket consumption in GB. totalUsageGB Total storage consumption in GB. buckets Bucket consumption. subAccounts Details of sub-account. subAccountName Name of the sub-account. subAccountId Unique identifier of a sub-account. 400 Bad Request {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message TokenExpired Token expired. InvalidToken Token is not valid. InvalidTimeRange Invalid time range. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message Internalerror The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }, 
{ "title" : "Getting current month storage usage ", 
"url" : "getting-current-month-storage-usage.html", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting current month storage usage ", 
"snippet" : "package main import (\"bytes\" \"net\/http\" ) func main() { headers: = map[string][] string { \"Accept\": [] string { \"application\/json\" }, \"Authorization\": [] string { \"Bearer {access-token}\" }, } data: = bytes.NewBuffer([] byte { jsonReq }) req, err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seaga...", 
"body" : "\npackage main\nimport (\"bytes\"\n \"net\/http\"\n) func main() {\n headers: = map[string][] string {\n \"Accept\": [] string {\n \"application\/json\"\n },\n \"Authorization\": [] string {\n \"Bearer {access-token}\"\n },\n }\n data: = bytes.NewBuffer([] byte {\n jsonReq\n }) req,\n err: = http.NewRequest(\"GET\", \"https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/current\/\", data) req.Header = headers client: = & http.Client {}\n resp,\n err: = client.Do(req) \/\/ ...\n}\n \nURL obj = new URL(\"https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/current\/\");\nHttpURLConnection con = (HttpURLConnection) obj.openConnection();\ncon.setRequestMethod(\"GET\");\nint responseCode = con.getResponseCode();\nBufferedReader in = new BufferedReader( new InputStreamReader(con.getInputStream()));\nString inputLine;\nStringBuffer response = new StringBuffer();\nwhile ((inputLine = in.readLine()) != null) { response.append(inputLine);\n}\nin.close();\nSystem.out.println(response.toString());\n \nconst headers = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n};\nfetch('https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/current\/', {\n method: 'GET',\n headers: headers\n })\n .then(function(res) {\n return res.json();\n }).then(function(body) {\n console.log(body);\n });\n \nimport requests\nheaders = {\n 'Accept': 'application\/json',\n 'Authorization': 'Bearer {access-token}'\n}\nr = requests.get('https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/current\/', headers = headers) print(r.json())\n \nrequire 'rest-client'\nrequire 'json'\nheaders = {\n 'Accept' => 'application\/json', 'Authorization' => 'Bearer {access-token}'\n}\nresult = RestClient.get 'https:\/\/api.lyvecloud.seagate.com\/v2\/usage\/current\/', params: {}, headers: headers p JSON.parse(result)\n This API returns the current month's storage usage and lists all buckets in the account and their calculated total usage size to the current date. In addition, you get the total number of buckets currently in the account and the total calculated usage. Based on the time range, it returns zero (0) if the data is unavailable. " }, 
{ "title" : "Request ", 
"url" : "getting-current-month-storage-usage.html#request-54400", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting current month storage usage \/ Request ", 
"snippet" : "The GET operation provides usage for the current month to date. GET \/usage\/current\/...", 
"body" : "The GET operation provides usage for the current month to date. GET \/usage\/current\/ " }, 
{ "title" : "Responses ", 
"url" : "getting-current-month-storage-usage.html#responses-54400", 
"breadcrumbs" : "Lyve Cloud API Documentation \/ Usage \/ Getting current month storage usage \/ Responses ", 
"snippet" : "Status Code Description Returned JSON payload 200 OK Successfully return usage data. If the account is a master account, the response includes usageByBucket , returning data usage for every bucket in the master account, and it also includes usageBySubAccount , returning data usage for its available ...", 
"body" : "Status Code Description Returned JSON payload 200 OK Successfully return usage data. If the account is a master account, the response includes usageByBucket , returning data usage for every bucket in the master account, and it also includes usageBySubAccount , returning data usage for its available sub-accounts. If the account is sub-account, the response includes usageByBucket , returning data usage for every bucket in the sub-account. However, usageBySubAccount is not returned, as there are no sub-accounts associated to another sub-account {\n \"usageByBucket\": {\n \"numBuckets\": 0,\n \"totalUsageGB\": 0,\n \"buckets\": [\n {\n \"name\": \"string\",\n \"usageGB\": 0\n }\n ]\n },\n \"usageBySubAccount\": {\n \"totalUsageGB\": 0,\n \"subAccounts\": [\n {\n \"subAccountName\": \"subname1\",\n \"subAccountId\": \"string\",\n \"usageGB\": 0,\n \"users\": 0,\n \"serviceAccounts\": 0,\n \"buckets\": 0,\n \"trial\": 0,\n \"createTime\": \"2022-10-16T14:06:51.494Z\"\n }\n ]\n }\n} Field Description numBuckets Number of buckets. totalUsageGB Total storage consumption in GB. buckets Bucket consumption. name Bucket name. usageGB Bucket consumption in GB totalUsageGB Total usage of the master account, including the sub-accounts. subAccounts Details of sub-account. subAccountName Name of the sub-account. subAccountId Unique identifier of a sub-account. usageGB Usage of the account in GB. users Lists the total number of users for each sub-account. serviceAccounts Lists the number of service accounts for each sub-account. buckets Total number of buckets created in the Sub-account. trial Remaining number of days for the trial to expire. If the trial is not provisioned for the account, then the trial is -1. createTime Date and time when the Sub-account is created. 400 The token is not valid or is expired. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ExpiredToken Token expired. InvalidToken Token is not valid. 403 Forbidden The account has no services enabled. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message NoServiceAvailable The account has no services enabled for it. 500 The server encountered an internal error. {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message InternalError The server encountered an internal error. Please retry the request. 503 Service Unavailable {\n \"code\": \"string\",\n \"message\": \"string\"\n} code message ServiceNotReady The server is not ready to handle the request. Please retry the request later. " }
]
$(document).trigger('search.ready');
});